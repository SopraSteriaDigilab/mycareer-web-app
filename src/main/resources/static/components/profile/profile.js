$(function() {
	initMyProfile();
});

/** Constants */
const NO_EXTRA_EMAIL_ADDRESS = "No extra email address has been written.";

/** DOM element references */
var $sopraSteriaEmails = $(".sopra-steria-emails");
var $addEmailButton = $(".add-email-button");
var $addEmailText = $("#add-email-text");
var $addEmailInput = $("#add-email-input");
var $profileContainer = $("#profile-container");

var $emailBtn = $(".email-btn");
var $emailBtn0 = $(".email-btn-0");
var $emailBtn1 = $(".email-btn-1");
var $emailBtn2 = $(".email-btn-2");

var hasExtraEmailAddress = false;
var currentOperation = null;
var currentExtraEmail=getUserAddress();
var dropdownToggled = false;

function initMyProfile(){
	populateProfile(getUserName(), getADfullName());
	
	initEmailModal();
	
	//Prevents the menu to collapse when the user clicks on "Print"
	$('#printOption').click(function(event){ event.stopPropagation(); });
	$profileContainer.click(function(){ toggleProfileCaret() });
	
	//onClick for opening print modal
	$('.pdf').click(function(event) {
		var id = event.target.id;
		if(id === "objPDF"){			
			 getObjectivesData();
			 $('#print-modal-title-type').text('Objectives');
		}
		else if(id === "feedPDF"){
			 getFeedbackData();
			 $('#print-modal-title-type').text('Feedback');
		}
		else if(id === "devPDF"){
			 getDevelopmentNeedsData();
			 $('#print-modal-title-type').text('Development Needs'); 
		}
		else if(id === "notesPDF"){
			 getNotesData();
			 $('#print-modal-title-type').text('Notes');
		}
		$("#pdf-modal-body").append("<div class=\"" + id + "\"></div>");
		openPrintModal();
	});
	
	//onClick for closing print modal
	$('#close, #close-print-cross').on('click', function(e) { 
		$('#pdf-modal-body').empty();
		$(".printButton").remove(); //Because the button (automatically generated by Datatables) is appened to .modal-footer each time. 
	});
	
	//onClick for opening email modal
	$('#email').click(function(event) { openEmailModal(); });
	
	//onClick for closing print modal
	$('#close-email , #close-email-x').on('click', function(e) { $('#email-modal').modal('hide'); });
}

function populateProfile(userName, fullName){
	$("#userProfileName").append("<h4 class='profile-centre' >" + fullName + " ");
	$("#userProfilePicture").append(getProfilePicture(userName, 48)).append("<span id='profile-caret' class='caret'></span>");
	highlightProfileDropdown("#userProfilePicture, #userProfileName");
}

function highlightProfileDropdown(elements){
    $("#profile-container").hover(function(){
        $(elements).css("color", "#cacaca");
        }, function(){
        $(elements).css("color", "#FFF");
    });
}

function toggleProfileCaret(){
	if(dropdownToggled){
		$("#profile-caret").removeClass("rotate");
		dropdownToggled = false;
	}else{
		$("#profile-caret").addClass("rotate");
		dropdownToggled = true;
	}
}

//----------------------------------------------------------- print modal ---------------------------------------------------------

//Function to set up and open print modal
function openPrintModal(){
	$('#print-modal').modal({
		backdrop: 'static',
		keyboard: false,
		show: true
	});
}

//Function to set up and open print modal
function openEmailModal(){
	$('#email-modal').modal(
			{backdrop: 'static', keyboard: false, show: true}
	);
}


//----------------------------------------------------------- email modal ---------------------------------------------------------

/** Initialise the email modal. */
function initEmailModal(){
	getEmails();
	if (hasExtraEmailAddress===false){
		toggleBtn($emailBtn0);
	}
	else{
		toggleBtn($emailBtn2);
	}
	$("#edit-email-button").click(function(){ editExtraEmail(); });
	$("#delete-email-button").click(function(){ deleteExtraEmail(); });
	$("#save-email-button").click(function(){ saveExtraEmail(); });
	$("#cancel-email-button").click(function(){ closeExtraEmail(); });
	$("#add-email-button").click(function(){ addExtraEmail(); });
}

/** Retrieve email details from database and update relevant DOM Elements. */
function getEmails(){	
	var emailSet=getEmailSet();
	var userAddress=getUserAddress();
	if (!(userAddress === null || userAddress === '')){hasExtraEmailAddress = true};
	setEmailAddresses(emailSet,userAddress); //In success function
}

/** Sets the email addresses in the HTML */
function setEmailAddresses(sopraSteriaEmailAddresses, preferedEmailAddress){

	var sopraSteriaEmailsHTML = "<h6>" + sopraSteriaEmailAddresses.join("</h6><h6>");
	var extraEmail = (preferedEmailAddress == null || preferedEmailAddress == '') ? NO_EXTRA_EMAIL_ADDRESS : preferedEmailAddress;

	$addEmailInput.val(preferedEmailAddress);
	setExtraEmailLabel(extraEmail);
	$sopraSteriaEmails.html(sopraSteriaEmailsHTML);
}

/** Sets extra email label */
function setExtraEmailLabel(extraEmail){
	if (extraEmail!==NO_EXTRA_EMAIL_ADDRESS){
		$addEmailText.text(extraEmail);
	}
	else {
		$addEmailText.text(NO_EXTRA_EMAIL_ADDRESS);
	}
//	var extra = (extraEmail == "") ? NO_EXTRA_EMAIL_ADDRESS : isValidEmailAddress(extraEmail);
	
}

function toggleBtn(newState){
	$emailBtn.hide();
	newState.show();
};

/** Make extra email address editable. */
function editExtraEmail(){
	currentOperation="edit";
	if ($addEmailText.text() !== NO_EXTRA_EMAIL_ADDRESS){
		$addEmailInput.val($addEmailText.text());
	}
	toggleBtn($emailBtn1);
}

function deleteExtraEmail(){
	var userId = getADLoginID();
	var emailAddress = "";
	var success = function(response){ deleteExtraEmailSuccess() }
	var error = function(error){}
	
	saveExtraEmailAction(userId, emailAddress, success, error);
}

function deleteExtraEmailSuccess(){
	currentExtraEmail="";
	$addEmailInput.val('');
	toggleBtn($emailBtn0);
	$addEmailText.text(NO_EXTRA_EMAIL_ADDRESS);
}

function deleteExtraEmailError(){
}

function addExtraEmail(){
	currentOperation="add";
	toggleBtn($emailBtn1);
}

function closeExtraEmail(){
	$addEmailInput.val('');
	if (currentOperation==="edit"){
		toggleBtn($emailBtn2);
	}
	if (currentOperation==="add"){
		toggleBtn($emailBtn0);
	}
}

/** Save extra email address to the database. */
function saveExtraEmail(){
	
	var extraEmailInput=$addEmailInput.val().trim();
	var extraEmailText=$addEmailText.text();
	
	if (isExtraEmailUpdated(extraEmailInput)){
		if (extraEmailInput===""){
			currentExtraEmail=extraEmailInput;
			deleteExtraEmail();
			$addEmailText.text(NO_EXTRA_EMAIL_ADDRESS);
			toggleBtn($emailBtn0);
		}	
		else{
			var validEmail=isValidEmailAddress(extraEmailInput);	
			if (!validEmail){
				toastr.error("Email format is incorrect");
				return;
			}
			else {
				currentExtraEmail=extraEmailInput;
				saveExtraEmailAction(getADLoginID(), extraEmailInput, function(response){
					saveExtraEmailSuccess(extraEmailInput)
					}, function(){});
			}
		}
	}
	else {
		if (extraEmailInput===""){
			$addEmailText.text(NO_EXTRA_EMAIL_ADDRESS);
			toggleBtn($emailBtn0);
		}	
		else {
			toggleBtn($emailBtn2);		
		}
	}
}

function isExtraEmailUpdated(extraEmailInput){
	if(extraEmailInput===currentExtraEmail){
		return false;
	}
	else{
		return true;
	}
}

function saveExtraEmailSuccess(extraEmailInput){
	setExtraEmailLabel(extraEmailInput);
	toggleBtn($emailBtn2);
}

function saveExtraEmailError(){
}